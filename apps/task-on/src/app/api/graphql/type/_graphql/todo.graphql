
  type TTodoList {
    uuid: String!
    contents: [TContent!]!
  }

  type TContent {
    id: Float!
    text: String!
    completed: Boolean!
  }

  input ContentInput {
    id: Float!
    text: String!
    completed: Boolean!
  }

  type TTodoResponse implements TResponse {
    message: String
    status: Int!
    data: TTodoList
  }
  type TTodoItemResponse implements TResponse {
    message: String
    status: Int!
    data: TContent
  }

  type Query {
    readTodo(uuid: String!): TTodoResponse!
  }

  type Mutation {
    createTodo(uuid: String!, contents: [ContentInput!]!): TTodoItemResponse
    createTodoItem(uuid: String!, content: ContentInput!): TTodoItemResponse
    updateCompletedTodo(uuid: String!, id: Float!, completed: Boolean!): TTodoItemResponse
    deleteTodoItem(uuid: String!, id: Float!): TTodoItemResponse
  }
